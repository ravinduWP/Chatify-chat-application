/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import ChatEngine.Client;

import javax.swing.*;
import java.io.IOException;
import java.net.Socket;
import java.sql.SQLException;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author rravi
 */


public class client_chat extends javax.swing.JFrame {

<<<<<<< Updated upstream
<<<<<<< Updated upstream
    /**
     * Creates new form client_chat
     */
    private static Socket socket;
    private static Client client;
    public client_chat() throws IOException {

=======
  
    
   private Client client;
    public client_chat() throws IOException {
        
>>>>>>> Stashed changes
        initComponents();
    }

=======
   


    private Client client;
    public client_chat() throws IOException {
        
        initComponents();
    }



>>>>>>> Stashed changes
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chat_display = new javax.swing.JTextArea();
<<<<<<< Updated upstream
<<<<<<< Updated upstream
        text = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
=======
        sendbtn = new javax.swing.JButton();
=======
        send = new javax.swing.JButton();
>>>>>>> Stashed changes
        jPanel1 = new javax.swing.JPanel();
>>>>>>> Stashed changes

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                try {
                    formWindowOpened(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(211, 228, 205));

        chat_display.setColumns(20);
        chat_display.setRows(5);
        jScrollPane1.setViewportView(chat_display);

<<<<<<< Updated upstream
<<<<<<< Updated upstream
        send.setBackground(new java.awt.Color(85, 117, 113));
        send.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        send.setForeground(new java.awt.Color(255, 255, 255));
        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    sendActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });
=======
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 22, 269, 310));
=======
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 22, 269, 310));

        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });
        getContentPane().add(send, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 355, -1, -1));
>>>>>>> Stashed changes

        sendbtn.setText("send");
        sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbtnActionPerformed(evt);
            }
        });
        getContentPane().add(sendbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 355, -1, -1));
>>>>>>> Stashed changes

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Img/icons8-male-user-48_1.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    jLabel1MouseClicked(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, 580, 410));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

<<<<<<< Updated upstream
    private void sendActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_sendActionPerformed
       
       SwingWorker<Void, String> worker = new SwingWorker<Void, String>() {
            @Override
            protected Void doInBackground() throws Exception {
//                client.sendMessage(text.getText());
                
                return null;
            }
=======
    private void formWindowOpened(java.awt.event.WindowEvent evt) throws IOException {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        String host = "localhost";  // Replace with the server host
            int port = 12345;  // Replace with the server port
            connectToServer(host, port);
<<<<<<< Updated upstream
>>>>>>> Stashed changes

        };
        // Start the worker
        worker.execute();
        chat_display.append(text.getText()+"\n");
        text.setText("");

    }//GEN-LAST:event_sendActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) throws IOException {//GEN-FIRST:event_formWindowOpened
//        String[] names = {"apple", "banana", "cherry", "date", "elderberry"};
//        // create a new Random object
//        Random random = new Random();
//        // generate a random index within the bounds of the array
//        int index = random.nextInt(names.length);
//        String username =names[index];
//        System.out.println(username);
//        socket = new Socket("192.168.8.177",55555);
//        client = new Client(socket,username);
//        client.listenForMessage();
    }//GEN-LAST:event_formWindowOpened
<<<<<<< Updated upstream

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) throws SQLException, ClassNotFoundException {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new Userprofile().setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

=======
    private void connectToServer(String host, int port) {
=======
    }//GEN-LAST:event_formWindowOpened

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        String message = text.getText();
        if (!message.isEmpty()) {
            sendMessage(message);
            text.setText("");
            chat_display.append("\n"+message);
        }
            
    }//GEN-LAST:event_sendActionPerformed
private void connectToServer(String host, int port) {
>>>>>>> Stashed changes
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                client = new Client(host, port);
                client.connect();
                return null;
            }

            @Override
            protected void done() {
                // Handle any UI updates or post-connection tasks here
            }
        };
<<<<<<< Updated upstream

        worker.execute();
    }

    private void sendMessage(String message) {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                if (client != null) {
                    client.sendMessage(message);
                   
                }
                return null;
            }

            @Override
            protected void done() {
                // Handle any UI updates or post-message tasks here
            }
        };

        worker.execute();
    }
    private void sendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbtnActionPerformed

        String message = text.getText();
        if (!message.isEmpty()) {
            chat_display.append("\n"+message);
            sendMessage(message);
            text.setText("");
        }
       
    }//GEN-LAST:event_sendbtnActionPerformed
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes

        worker.execute();
    }

    private void sendMessage(String message) {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                if (client != null) {
                    client.sendMessage(message);
                   
                }
                return null;
            }

            @Override
            protected void done() {
                // Handle any UI updates or post-message tasks here
            }
        };

        worker.execute();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */


        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new client_chat().setVisible(true);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea chat_display;
<<<<<<< Updated upstream
<<<<<<< Updated upstream
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton send;
=======
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendbtn;
>>>>>>> Stashed changes
    public static javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables
=======
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton send;
    public static javax.swing.JTextField text;
    // End of variables declaration//GEN-END:variables


>>>>>>> Stashed changes
}
